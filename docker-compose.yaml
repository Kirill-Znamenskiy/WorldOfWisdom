name: world-of-wisdom

configs:
  client-config.yaml:
    file: ./client/configs/config.yaml
  server-config.yaml:
    file: ./server/configs/config.yaml
secrets:
  client-config.prod.yaml:
    file: ./client/configs/config.prod.yaml
  server-config.prod.yaml:
    file: ./server/configs/config.prod.yaml


services:
  alpine:
    image: alpine
    command: sleep infinity

  client:
    build:
      pull: true
      no_cache: true
      target: main
      context: ./client
      additional_contexts:
        server: ./server
      args:
        BUILD_ENV: ${BUILD_ENV:-UNKNOWN}
        BUILD_GIT_SHOW_VERSION: ${BUILD_GIT_SHOW_VERSION:-UNKNOWN}
    environment:
      ENV: ${ENV:-UNKNOWN}
      CONFIG_FILE_PATH: "./config.yaml+./config.prod.yaml"
    configs: [ { source: client-config.yaml, target: /wrkdir/config.yaml }]
    secrets: [ { source: client-config.prod.yaml, target: /wrkdir/config.prod.yaml }]
    entrypoint: ""
    command: "sleep infinity"
    deploy:
      restart_policy:
        delay: 15s
        window: 15s
        max_attempts: 3
        condition: on-failure

  server:
    build:
      pull: true
      target: main
      context: ./server
      args:
        BUILD_ENV: ${BUILD_ENV:-UNKNOWN}
        BUILD_GIT_SHOW_VERSION: ${BUILD_GIT_SHOW_VERSION:-UNKNOWN}
    environment:
      ENV: ${ENV:-UNKNOWN}
      SERVER___ADDRESS: 0.0.0.0:1234
    ports: [ "127.0.0.1:1234:1234" ]
    configs: [ { source: server-config.yaml, target: /wrkdir/config.yaml }]
    secrets: [ { source: server-config.prod.yaml, target: /wrkdir/config.prod.yaml }]
    command: "./config.yaml+./config.prod.yaml"
    deploy:
      restart_policy:
        delay: 15s
        window: 15s
        max_attempts: 3
        condition: on-failure

networks:
  default:
    name: ${COMPOSE_PROJECT_NAME}
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: ${COMPOSE_PROJECT_NAME}
